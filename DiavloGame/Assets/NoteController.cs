using System.Collections;
using System.Collections.Generic;
using UnityEngine;
//Name: Sree Bandi & Daniel Rusetski 
//Date: November 12, 2020
//Assignment: ICS3U1 Culminating Assignment 
//Script Name: NoteController
//Purpose of Script: Controls the movement of the notes (causes the notes to move down the screen). 
//Public class can be accessed by other scripts.
public class NoteController : MonoBehaviour //Auto-generated by Unity, MonoBehaviour is the base class from which every Unity script derives. See https://docs.unity3d.com/ScriptReference/MonoBehaviour.html.
{
    //Public variable so that value can be set in the inspector (the NoteTempo value is set after being inputted in the inspector box). 
    public float NoteTempo;
    //Public variable so that value can be accessed across multiple methods and can be seen as being true in the inspector for easy error testing (seen as a check box in the inspector). Bool used for determining if the game has started. 
    public bool GameStarted; 
    //Public variable so that value can be set in the inspector (usually done by choosing the key the variable binds to with the inspector box this is also why there is no =), this is an empty variable for a keyboard key bind. The key used to start the game when pressed.
    public KeyCode StartKey;
    // Start is called before the first frame update 
    void Start() //Auto-generated by Unity, this code means that the code in this method (A method is a code block that contains a series of statements). This is not a private void so it can be accessed by any class, as it has the Start() function it and runs once upon the start of the program (for one frame). 
    {
        //This is to determine the rate at which the notes will fall considering BPM, this allows the notes to sync with the beat. 
        NoteTempo = NoteTempo/60f;
    }
    // Update is called once per frame
    void Update()//Auto-generated by Unity, Update is called every frame, if the MonoBehaviour is enabled, this means that the code within the update method repeats once every frame.The void keyword is used in method signatures to declare a method that does not return a value.
    {
        //This if statement is used to determine if the game has started or not with the bool GameStarted, if the has not started already then by pressing the StartKey the game will start as the bool will become true.
        if (!GameStarted)
        {
            //This if statements ensures that this block of code will run only when the StartKey is pressed, as Input.GetKeyDown refers to when the input of a key on the keyboard being pressed. The key in the brackets is the variable that was bound to a specific key.
            if (Input.GetKeyDown(StartKey))
            {
                //The bool GameStarted becomes true. 
                GameStarted = true; 
            } 
        }
        //This statement is to start the motion of the notes declaring that if the game has started then the notes will begin to slide down.
        else
        {
            //The code transform.postion is used to cause the notes to move downwards in the y direction, this is done by causing the notes to transform their position downwards 0 in the X, 0 in the Z and NoteTempo * The delata time(totaltime (which is the total time in the frame)) (so the note moves NoteTempo spaces down for time in frame (similar to m/s making this a kind of speed)).
            //As the code loops and refreshes ever frame the note continously spawns as a new vector (hence the new Vector3) at NoteTempo distance/ frame in the y causing it to appear that the note is moving at a constant speed down the screen. The X and Z are 0 because the note is not moving in the X or Z axis. 
            transform.position -= new Vector3(0, NoteTempo * Time.deltaTime, 0);
        }
    }
}
